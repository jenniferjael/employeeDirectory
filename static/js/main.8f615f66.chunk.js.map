{"version":3,"sources":["components/Header/index.js","components/Search/index.js","components/Employee/index.js","utils/api.js","components/Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","style","textDecoration","color","Search","props","id","onSubmit","handleSearch","type","className","placeholder","aria-label","aria-describedby","name","onChange","handleChange","value","onClick","Employee","margin","sortByName","results","map","result","src","picture","medium","alt","first","last","cell","href","email","login","uuid","api","getEmployees","axios","get","Container","state","search","employees","employeesData","ascending","filteredRes","sorted","sort","a","b","console","log","setState","event","UserInput","target","filter","employee","toLowerCase","indexOf","searchEmployee","API","then","res","data","catch","err","preventDefault","alert","includes","this","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f615f66.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header(){\n    let styles = {\n        h1: {\n            textDecoration: \"underline\",\n            color: \"blue\",\n        }\n    }\n    return(\n        <>\n        <h1 style = {styles.h1}>EMPLOYEE DIRECTORY</h1>\n        </>\n    )\n}\nexport default Header;","import React from \"react\";\n\nfunction Search(props){\n    let styles = {\n        form: {\n            textDecoration: \"underline\",\n            color: \"blue\",\n        }\n    }\n    return(\n        <>\n     <main>\n        <form id=\"searchForm\" onSubmit={props.handleSearch} style={styles.form}>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Type employee name...\"\n            aria-label=\"Recipient's username\"\n            aria-describedby=\"button-addon2\"\n            name=\"search\"\n            onChange={props.handleChange}\n            value={props.value}\n            id=\"employees\"\n          />\n          <button\n            className=\"btn btn-outline-primary\"\n            onClick={props.handleSearch}\n            type=\"submit\"\n            id=\"search\"\n          >\n            Search\n          </button>\n        </form>\n      </main>\n        </>\n    )\n}\nexport default Search;","import React from \"react\";\nfunction Employee(props) {\n  let styles = {\n    table: {\n      margin: \"30px auto\"\n    },\n  };\n  return (\n    <>\n     <table className=\"tableEmployee \" style={styles.table}>\n            <thead>\n                <tr>\n                    <th></th>\n                    <th onClick={props.sortByName}>Name</th>\n                    <th>Phone</th>\n                    <th>E-mail</th>\n                </tr>\n            </thead>\n            <tbody className= \"\">\n                {props.results.map(result => (\n                    <tr className=\"table\" key={result.login.uuid}>\n                        <td> <img className=\"\n                        \"src={result.picture.medium} alt=\"\" /></td>\n                        <td>{result.name.first + \" \" + result.name.last}  </td>\n                        <td>{result.cell}</td>\n                        <td className=\"email\"><a href={result.email}>{result.email}</a></td>\n                    </tr>\n                ))}\n            </tbody>\n        </table >\n    </>\n  );\n}\nexport default Employee;","//import axios for api calls\nimport axios from \"axios\";\nconst api = {\n    // https://randomuser.me/api/\n    // another way of writing the api call\n    // getByEmployee: employeeName => {\n    //     return axios.get(`https://randomuser.me/api/?inc=${employeeName}`);\n    // }\n    // when you dont have the curly braces on an ES6 functions, it will return\n    // the right handside evalutation...since its only one line.\n     getEmployees: () =>\n      axios.get(\"https://randomuser.me/api/?results=100&nat=us\"),\n}\nexport default api;","import React, { Component } from \"react\";\nimport Search from \"../Search/index\";\nimport Employee from \"../Employee/index\";\nimport API from \"../../utils/api\"\n\n\nclass Container extends Component{\n    state = {\n        // search will start as an empty string and will change as the user types in a name\n        search: \"\",\n        // We'll be getting arrays of objects from the api call for\n        // employees and employeesData.\n        employees: [],\n        employeesData: [],\n        // the order of the results will start off as ramdom\n        // and then change to ascending when the user clicks on search button\n        ascending: \"\",\n      };\n      // Upon loading the page, this is what the user will see displayed\n  // the states of employess and employeeData will change and will\n  // display a list of random results\n  componentDidMount() {\n    API.getEmployees()\n      .then((res) =>\n        this.setState({\n          employees: res.data.results,\n          employeesData: res.data.results,\n        })\n      )\n      .catch((err) => console.log(err));\n  }\n  // sort results by name\n  sortByName = () => {\n    const filteredRes = this.state.employeesData;\n    if (this.state.ascending === \"asc\") {\n      const sorted = filteredRes.sort((a, b) =>\n        a.name.first > b.name.first ? 1 : -1\n      );\n      console.log(sorted);\n      this.setState({\n        employeesData: sorted,\n        ascending: \"desc\",\n      });\n    } else {\n      const sorted = filteredRes.sort((a, b) =>\n        a.name.first > b.name.first ? -1 : 1\n      );\n      console.log(sorted);\n      this.setState({\n        employeesData: sorted,\n        ascending: \"asc\",\n      });\n    }\n  };\n\n      handleChange = (event)=>{\n        const employees = this.state.employees;\n    // Grabbing the value of the user input\n    const UserInput = event.target.value;\n    const employeesData = employees.filter(\n      (employee) =>\n        employee.name.first.toLowerCase().indexOf(UserInput.toLowerCase()) > -1\n    );\n    this.setState({\n      employeesData,\n    });\n      }\n      // Api call should render random employee results when the\n  // page is first loaded or refreshed\n  searchEmployee = () => {\n    API.getEmployees()\n      .then((res) =>\n        this.setState({\n          employees: res.data.results,\n          employeesData: res.data.results,\n        })\n      )\n      .catch((err) => console.log(err));\n  };\n      handleSearch = (event)=>{\n        event.preventDefault();\n    if (!this.state.search) {\n      alert(\"Enter an employee name, please.\");\n    }\n    const { employees, search } = this.state;\n    const employeesData = employees.filter((employee) =>\n      employee.name.first.toLowerCase().includes(search.toLowerCase())\n    );\n    this.setState({\n      employeesData,\n    });\n      }\n    render(){\n\n    \n    return(\n        <div>\n        <Search\n          employee={this.state.employees}\n          handleSearch={this.handleSearch}\n          handleChange={this.handleChange}\n        />\n        <Employee results={this.state.employeesData}\n        sortByName={this.sortByName}\n        />\n      </div>\n    )\n    }\n}\nexport default Container;","import './App.css';\nimport Header from \"./components/Header\";\nimport Container from \"./components/Container\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Header/>\n     <Container/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}